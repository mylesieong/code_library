Sheet1
	Language	Desc	Code Ref
	css	css comment	.byline {
 color: green;
 font-size: .875em;
 text-shadow: 2px 1px 5px orange; /* IE9 and earlier don't support */
 } /* You can put comments here, too! */
	css	css class(subclass)	<p class="example">Here's , this paragraph will be blue.</p>
 <p class="example example-2">Here's green instead of magenta.</p>
 …
 .example {
  color: blue;
 }
 .example.example-2 {
  color: magenta;
 }
	css	css id	#someID { ... } <p id="someID">...</p>
	css	common css attribute	◎◎文本
  color（颜色，a 元素除外）
  direction（方向）
  font（字体）
  font-family（字体系列）
  font-size（字体大小）
  font-style（用于设置斜体）
  font-variant（用于设置小型大写字母）
  font-weight（用于设置粗体）
  letter-spacing（字母间距）
  line-height（行高）
  text-align（用于设置对齐方式）
  text-indent（用于设置首行缩进）
  text-transform（用于修改大小写）
  visibility（可见性）
  white-space（用于指定如何处理空格）
  word-spacing（字间距）
	css	common css attribute	◎◎列表
  list-style（列表样式）
  list-style-image（用于为列表指定定制的标记）
  list-style-position（用于确定列表标记的位置）
  list-style-type（用于设置列表的标记）
	css	common css attribute	◎◎表格
  border-collapse（用于控制表格相邻单元格的边框是否合并为单一边框）
  border-spacing（用于指定表格边框之间的空隙大小）
  caption-side（用于设置表格标题的位置）
  empty-cells（用于设置是否显示表格中的空单元格）
	css	common css attribute	◎◎页面设置（对于印刷物）
  orphans（用于设置当元素内部发生分页时在页面底部需要保留的最少行数）
  page-break-inside（用于设置元素内部的分页方式）
  widows（用于设置当元素内部发生分页时在页面顶部需要保留的最少行数）
	css	common css attribute	◎◎其他
  cursor（鼠标指针）
  quotes（用于指定引号样式）
	css	em	有的长度是相对于其他值的。一个em 的长度大约与对应元素的字号相等。例如，对元素设置margin-left: 2em 就代表将元素的左外边距设为元素字号的两倍。（这种做 法被称为响应式Web 设计)
	css	attributes	border: none;
	css	attributes	font-size: .875em;
	css	attributes	width: 80%;
	css	attributes	line-height: 1.5;
	css	attributes	z-index: 2;
	css	attributes	opacity: 5;
	css	attributes	background: url(bg-pattern.png);
	css	attributes	color: rgb(89, 0, 127);
	css	attributes	color: #59007f;
	css	attributes transparency	background-color: rgba(60,143,0,.75); /* 25% 透明度  */
	css	attributes	font-family: arial, helvetica, sans-serif;
	css	attributes	font-size: 100%;
	css	attributes	padding: .5em;
	css	attributes	border: 4px solid red;
 …equivalent to …
 border-width: 4px;
 border-style: solid;
 border-color: red;
	css	attributes	font-style: italic;
	css	attributes	font-weight: normal;
	css	attributes	font-weight: bold;
	css	attributes	line-height: 1.45;
	css	attributes	font: 100% Geneva, Tahoma, Verdana;
	css	attributes	background-image: url(sky.png);
	css	attributes	background-repeat: repeat-x;
	css	attributes	background-position: left bottom;
	css	attributes	background-attachment: fixed;
	css	attributes	letter-spacing: 7px;
	css	attributes	text-indent: 2em; /* 30px */
	css	attributes	text-align: center;
	css	attributes	text-align: justify;
	css	Color	CSS3 指定了CSS2.1 本来就有的16 个基本的名称（参见图7.5.6），另外又增加了131 个。完整的列表见www.w3.org/TR/css3-color/#svg-color。
	css	HTML<>CSS	<link rel="stylesheet" href="style.css" />
	css	嵌入式CSS	<style>
 img {
 border: 4px solid red;
 }
 </style>
	css	內聯式CSS	<img src="img/palau.jpg" width="250"
 ➝ height="163" alt="El Palau de la Música"
 ➝ style="border: 4px solid red" />
	css	selector	h1 em {
 color: red;
 }
 /* 只對h1下的em有影响, 可以為遠祖
	css	selector	a[title] {
 color: red;
 }
 針對具title屬性的
 同理, 對有列Class或ID的元素可以如下處理:
 p[class], p[id], 或更具體:
 [attribute] 匹配指定属性，不论具体值是什么
 [attribute="value"] 完全匹配指定属性值
 [attribute~="value"] 属性值是以空格分隔的多个单词，其中有一个完全匹配指定值
 [attribute|="value"] 属性值以value- 打头
 [attribute^="value"] 属性值以value 开头，value 为完整的单词或单词的一部分
 [attribute$="value"] 属性值以value 结尾，value 为完整的单词或单词的一部分
 [attribute*="value"] 属性值为指定值的子字符串
	css	selector	用* { border: 2px
 solid green; }
	css	selector	.architect > p {
 color: red;
 }只針對父子關係
	css	selector	.architect p+p {
 color: red;
 }兄弟
	css	selector	li:first-child {
 color: red;
 }最早一子
	css	selector	li:last-child {
 color: red;
 }最後一子
	css	selector	p:first-letter {
 color: red;
 font-size: 1.4em; /* make letter
 ➝ larger */
 font-weight: bold;
 }
	css	selector	p:first-line {
 color: red;
 }
	css	selector	a:link {
 color: red;
 }
 a:visited {
 color: orange;
 }
 a:focus {
 color: purple;
 }
 a:hover {
 color: green;
 }
 a:active {
 color: blue;
 }
	css	custom font	@font-face {
    font-family: myFirstFont;
    src: url(sansation_bold.woff);
    font-weight: bold;
}

div {
    font-family: myFirstFont;
}
	css	中文字體	新细明体 PMingLiU \65B0\7EC6\660E\4F53 &#x65B0;&#x7EC6;&#x660E;&#x4F53;
细明体 MingLiU \7EC6\660E\4F53 &#x7EC6;&#x660E;&#x4F53;
标楷体 DFKai-SB \6807\6977\4F53 &#x6807;&#x6977;&#x4F53;
黑体 SimHei \9ED1\4F53 &#x9ED1;&#x4F53;
宋体 SimSun \5B8B\4F53 &#x5B8B;&#x4F53;
新宋体 NSimSun \65B0\5B8B\4F53 &#x65B0;&#x5B8B;&#x4F53;
仿宋 FangSong \4EFF\5B8B &#x4EFF;&#x5B8B;
楷体 KaiTi \6977\4F53 &#x6977;&#x4F53;
仿宋_GB2312 FangSong_GB2312 \4EFF\5B8B_GB2312 &#x4EFF;&#x5B8B;_GB2312
楷体_GB2312 KaiTi_GB2312 \6977\4F53_GB2312 &#x6977;&#x4F53;_GB2312
微软正黑体 Microsoft JhengHei \5FAE\x8F6F\6B63\9ED1\4F53 &#x5FAE;&#x8F6F;&#x6B63;&#x9ED1;&#x4F53;
微软雅黑 Microsoft YaHei \5FAE\8F6F\96C5\9ED1 &#x5FAE;&#x8F6F;&#x96C5;&#x9ED1;
	css	selector	.foo.bar {…} For element that implements class foo and bar together
	css	selector	h1, p {
    background-color: yellow;
}
Both h1 & p element applies
	css	selector	div+p
Selects all <p> elements that are placed immediately after <div> elements
	css	背景漸變	/* the 3 para of line-gradient means: turn x degree from 12 o'clock clockwise, bottom color, top color*/ 
.color-bg-gradient-blue {background: linear-gradient(70deg, #6BCAE2, #7CDBF3);}
	css	底線	.bottom-line-orange-1{ border-bottom: 0.3em solid #FE8402; }
	css	Shadow	/* The 5 para means: hori-offset, verti-offset, bluring, size, color */
.shadow-1-blue{    box-shadow: 0.1em 0.1em 0.3em lightblue;}
	css	圓角化	.border-radius-5 {border-radius:2em;}
.border-radius-test {border-top-left-radius:2em; border-top-right-radius:2em;}
	css	動畫	.bg-down {
  -moz-transition: all 0.4s ease-out;
  /* FF4+ */
  -o-transition: all 0.4s ease-out;
  /* Opera 10.5+ */
  -webkit-transition: all 0.4s ease-out;
  /* Saf3.2+, Chrome */
  -ms-transition: all 0.4s ease-out;
  /* IE10 */
  transition: all 0.4s ease-out;
}
	css	因media元素改變而變(append css)	@media screen and (min-width: 759px) and (max-width: 1000px){…}
@media screen and (max-width: 758px) {…}
@media screen and (min-width: 1001px) {…}


Sheet2


Sheet3


